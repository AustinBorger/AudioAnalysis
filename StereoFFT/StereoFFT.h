#pragma once

#include <Windows.h>
#include <comdef.h>

struct STEREO_FFT_DESC {
	UINT NumSamples;
};

struct __declspec(uuid("6ec6f647-b334-40d5-ab37-45b5b76ba4ac")) IStereoFFT : public IUnknown {
	/* Updates the history buffer with new information.
	** [Buffer] must be in stereo-interleaved format.
	** [BufferFrames] is the number of stereo samples in the buffer. */
	virtual VOID STDMETHODCALLTYPE Post(PFLOAT Buffer, UINT BufferFrames) PURE;

	/* Processes the data in the history buffer, generating all statistics. */
	virtual VOID STDMETHODCALLTYPE Process() PURE;

	/* Returns the number of samples being operated on. */
	virtual UINT STDMETHODCALLTYPE GetNumSamples() PURE;

	/* Returns the number of FFT bins generated by a transform. */
	virtual UINT STDMETHODCALLTYPE GetNumBins() PURE;

	/* Returns the left mix buffer. */
	virtual CONST PFLOAT STDMETHODCALLTYPE GetLeftMix() PURE;

	/* Returns the right mix buffer. */
	virtual CONST PFLOAT STDMETHODCALLTYPE GetRightMix() PURE;

	/* Returns the mid mix buffer. */
	virtual CONST PFLOAT STDMETHODCALLTYPE GetMidMix() PURE;

	/* Returns the side mix buffer. */
	virtual CONST PFLOAT STDMETHODCALLTYPE GetSideMix() PURE;

	/* Returns the left FFT power spectrum. */
	virtual CONST PFLOAT STDMETHODCALLTYPE GetLeftTransform() PURE;

	/* Returns the right FFT power spectrum. */
	virtual CONST PFLOAT STDMETHODCALLTYPE GetRightTransform() PURE;

	/* Returns the mid FFT power spectrum. */
	virtual CONST PFLOAT STDMETHODCALLTYPE GetMidTransform() PURE;

	/* Returns the side FFT power spectrum. */
	virtual CONST PFLOAT STDMETHODCALLTYPE GetSideTransform() PURE;

	/* Returns the left DC offset. */
	virtual FLOAT STDMETHODCALLTYPE GetLeftDCOffset() PURE;

	/* Returns the right DC offset. */
	virtual FLOAT STDMETHODCALLTYPE GetRightDCOffset() PURE;

	/* Returns the mid DC offset. */
	virtual FLOAT STDMETHODCALLTYPE GetMidDCOffset() PURE;

	/* Returns the side DC offset. */
	virtual FLOAT STDMETHODCALLTYPE GetSideDCOffset() PURE;
};

#ifdef _STEREO_FFT_DLL_PROJECT
	#define _STEREO_FFT_EXPORT_TAG __declspec(dllexport)
#else
	#define _STEREO_FFT_EXPORT_TAG __declspec(dllimport)
#endif

/* Creates the analysis object. */
extern "C" HRESULT _STEREO_FFT_EXPORT_TAG CreateStereoFFT (
	const STEREO_FFT_DESC* pDesc,
	IStereoFFT** ppAudioAnalysis
);